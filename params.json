{"name":"Testing","tagline":"testing tagline","body":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Web;\r\nusing System.Web.UI;\r\nusing System.Web.UI.WebControls;\r\nusing System.Xml;\r\n\r\npublic partial class _Default : System.Web.UI.Page \r\n{\r\n    private oAuthLinkedIn _oauth = new oAuthLinkedIn();\r\n    protected void Page_Load(object sender, EventArgs e)\r\n    {\r\n        string status = Request.QueryString[\"Status\"];\r\n        if(status != null)\r\n        {\r\n            Session[\"status\"] = status;\r\n        }\r\n        if (Session[\"status\"] != null)\r\n        {\r\n        txtStatus.Text = Session[\"status\"].ToString();\r\n        }\r\n        string oauth_token = Request.QueryString[\"oauth_token\"];\r\n        string oauth_verifier = Request.QueryString[\"oauth_verifier\"];\r\n        if (oauth_token != null && oauth_verifier != null)\r\n\r\n        {\r\n            txtRequestToken.Text = Application[\"reuqestToken\"].ToString();\r\n            txtTokenSecret.Text = Application[\"reuqestTokenSecret\"].ToString();\r\n            hypAuthToken.NavigateUrl = Application[\"oauthLink\"].ToString();\r\n            hypAuthToken.Text = Application[\"oauthLink\"].ToString();\r\n\r\n            Application[\"oauth_token\"] = oauth_token;\r\n            Application[\"oauth_verifier\"] = oauth_verifier;\r\n\r\n            txtoAuth_token.Text = oauth_token;\r\n            txtoAuth_verifier.Text = oauth_verifier;\r\n            if (!IsPostBack)\r\n            {\r\n                btnGetAccessToken_Click();\r\n\r\n            }\r\n        }\r\n        else\r\n        {\r\n            btnCreateAuthorization_Click();\r\n           \r\n        }\r\n    }\r\n\r\n    protected void btnCreateAuthorization_Click()\r\n    {\r\n        string authLink = _oauth.AuthorizationLinkGet();\r\n        Application[\"reuqestToken\"] = _oauth.Token;\r\n        Application[\"reuqestTokenSecret\"] = _oauth.TokenSecret;\r\n        Application[\"oauthLink\"] = authLink;\r\n        txtRequestToken.Text = _oauth.Token;\r\n        txtTokenSecret.Text = _oauth.TokenSecret;\r\n        hypAuthToken.NavigateUrl = authLink;\r\n        hypAuthToken.Text = authLink;\r\n        Response.Redirect(authLink);\r\n        \r\n    }\r\n\r\n    protected void btnGetAccessToken_Click()\r\n    {\r\n        _oauth.Token = txtoAuth_token.Text;\r\n        _oauth.TokenSecret = txtTokenSecret.Text;\r\n        _oauth.Verifier = txtoAuth_verifier.Text;\r\n\r\n        _oauth.AccessTokenGet(txtoAuth_token.Text);\r\n        txtAccessToken.Text = _oauth.Token;\r\n        txtAccessTokenSecret.Text = _oauth.TokenSecret;\r\n        btnGetAccessToken.Focus();\r\n    }\r\n\r\n    protected void btnSendStatusUpdate_Click(object sender, EventArgs e)\r\n    {\r\n        _oauth.Token = txtAccessToken.Text;\r\n        _oauth.TokenSecret = txtAccessTokenSecret.Text;\r\n        _oauth.Verifier = txtoAuth_verifier.Text;\r\n\r\n            string xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\";\r\n            xml += \"<current-status>\"+txtStatus.Text+\"</current-status>\";\r\n\r\n             string response = _oauth.APIWebRequest(\"PUT\", \"http://api.linkedin.com/v1/people/~/current-status\", xml);\r\n             if (response == \"\")\r\n                 lblResponse.Text = \"Your new status updated\";\r\n             btnSendStatusUpdate.Focus();\r\n             Page.ClientScript.RegisterStartupScript(this.GetType(), \"myCloseScript\", \"window.close()\", true); \r\n    }\r\n\r\n\r\n    protected void btnRequestProfile_Click(object sender, EventArgs e)\r\n    {\r\n        _oauth.Token = txtAccessToken.Text;\r\n        _oauth.TokenSecret = txtAccessTokenSecret.Text;\r\n        _oauth.Verifier = txtoAuth_verifier.Text;\r\n\r\n        string response = _oauth.APIWebRequest(\"GET\", \"https://api.linkedin.com/v1/people/~\", null);\r\n        lblResponse.Text = response;\r\n        btnRequestProfile.Focus();\r\n    }\r\n}\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}